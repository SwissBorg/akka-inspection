# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import inspection_pb2 as inspection__pb2


class ActorInspectionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RequestInspectableActors = channel.unary_unary(
        '/actorinspection.ActorInspectionService/RequestInspectableActors',
        request_serializer=inspection__pb2.InspectableActorsRequest.SerializeToString,
        response_deserializer=inspection__pb2.InspectableActorsResponse.FromString,
        )
    self.RequestGroups = channel.unary_unary(
        '/actorinspection.ActorInspectionService/RequestGroups',
        request_serializer=inspection__pb2.GroupsRequest.SerializeToString,
        response_deserializer=inspection__pb2.GroupsResponse.FromString,
        )
    self.RequestGroup = channel.unary_unary(
        '/actorinspection.ActorInspectionService/RequestGroup',
        request_serializer=inspection__pb2.GroupRequest.SerializeToString,
        response_deserializer=inspection__pb2.GroupResponse.FromString,
        )
    self.RequestFragmentIds = channel.unary_unary(
        '/actorinspection.ActorInspectionService/RequestFragmentIds',
        request_serializer=inspection__pb2.FragmentIdsRequest.SerializeToString,
        response_deserializer=inspection__pb2.FragmentIdsResponse.FromString,
        )
    self.RequestFragments = channel.unary_unary(
        '/actorinspection.ActorInspectionService/RequestFragments',
        request_serializer=inspection__pb2.FragmentsRequest.SerializeToString,
        response_deserializer=inspection__pb2.FragmentsResponse.FromString,
        )


class ActorInspectionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RequestInspectableActors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestGroups(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestGroup(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestFragmentIds(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestFragments(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ActorInspectionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RequestInspectableActors': grpc.unary_unary_rpc_method_handler(
          servicer.RequestInspectableActors,
          request_deserializer=inspection__pb2.InspectableActorsRequest.FromString,
          response_serializer=inspection__pb2.InspectableActorsResponse.SerializeToString,
      ),
      'RequestGroups': grpc.unary_unary_rpc_method_handler(
          servicer.RequestGroups,
          request_deserializer=inspection__pb2.GroupsRequest.FromString,
          response_serializer=inspection__pb2.GroupsResponse.SerializeToString,
      ),
      'RequestGroup': grpc.unary_unary_rpc_method_handler(
          servicer.RequestGroup,
          request_deserializer=inspection__pb2.GroupRequest.FromString,
          response_serializer=inspection__pb2.GroupResponse.SerializeToString,
      ),
      'RequestFragmentIds': grpc.unary_unary_rpc_method_handler(
          servicer.RequestFragmentIds,
          request_deserializer=inspection__pb2.FragmentIdsRequest.FromString,
          response_serializer=inspection__pb2.FragmentIdsResponse.SerializeToString,
      ),
      'RequestFragments': grpc.unary_unary_rpc_method_handler(
          servicer.RequestFragments,
          request_deserializer=inspection__pb2.FragmentsRequest.FromString,
          response_serializer=inspection__pb2.FragmentsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'actorinspection.ActorInspectionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
